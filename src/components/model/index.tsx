/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import { setPose } from '../../functions';

type GLTFResult = GLTF & {
	nodes: {
		Beta_Joints: THREE.SkinnedMesh
		Beta_Surface: THREE.SkinnedMesh
		mixamorigHips: THREE.Bone
	}
	materials: {
		Beta_Joints_MAT: THREE.MeshStandardMaterial
		['asdf1:Beta_HighLimbsGeoSG2']: THREE.MeshStandardMaterial
	}
}

// type ActionName = 'agree' | 'headShake' | 'idle' | 'run' | 'sad_pose' | 'sneak_pose' | 'walk';
// type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export default function Model(props: JSX.IntrinsicElements['group']) {
	// reference of model
	const group = useRef<THREE.Group>();
	// get elements of GLTF file
	const { nodes, materials } = useGLTF('/Xbot.glb') as GLTFResult;

	// set rotations of bones
	setPose(-1, nodes.Beta_Joints.skeleton.bones);

	return (
		<group ref={group} {...props} dispose={null}>
			<group scale={0.015}>
				<primitive object={nodes.mixamorigHips} />
				<skinnedMesh
					castShadow
					receiveShadow
					geometry={nodes.Beta_Joints.geometry}
					material={materials.Beta_Joints_MAT}
					skeleton={nodes.Beta_Joints.skeleton}
				/>
				<skinnedMesh
					castShadow
					receiveShadow
					geometry={nodes.Beta_Surface.geometry}
					material={materials['asdf1:Beta_HighLimbsGeoSG2']}
					skeleton={nodes.Beta_Surface.skeleton}
				/>
			</group>
		</group>
	);
};

useGLTF.preload('/Xbot.glb');

